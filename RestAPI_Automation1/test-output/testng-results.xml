<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="36" passed="34">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="11598" started-at="2020-05-28T21:02:37 IST" finished-at="2020-05-28T21:02:48 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="11598" started-at="2020-05-28T21:02:37 IST" finished-at="2020-05-28T21:02:48 IST">
      <class name="TestCases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="setUp" is-config="true" duration-ms="32" started-at="2020-05-28T21:02:37 IST" finished-at="2020-05-28T21:02:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="createEmployee" is-config="true" duration-ms="3968" started-at="2020-05-28T21:02:37 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckContentEncoding" duration-ms="25" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckContentLength" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckServerType" duration-ms="15" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckContentType" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckResponseTime" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="checkCookies" duration-ms="16" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckStatusCode" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="CheckStatusLine" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="checkResponseBody" duration-ms="15" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestCases.TC003_Post_Employee_Record@711f39f9]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCases.TC003_Post_Employee_Record -->
      <class name="TestCases.TC004_Update_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="createEmployee" is-config="true" duration-ms="2021" started-at="2020-05-28T21:02:41 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckContentEncoding" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckContentLength" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckContentType" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckResponseTime" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckStatusLine" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="checkResponseBody" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckServerType" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="checkCookies" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:TestCases.TC004_Update_Employee_Record@71bbf57e]" name="CheckStatusCode" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
      </class> <!-- TestCases.TC004_Update_Employee_Record -->
      <class name="TestCases.TC001_Get_All_Employee_Data">
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="getAllEmployees" is-config="true" duration-ms="4031" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:43 IST" finished-at="2020-05-28T21:02:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckContentEncoding" duration-ms="3" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckResponseTime" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckServerType" duration-ms="16" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckContentType" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckContentLength" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckStatusLine" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="CheckStatusCode" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="checkResponseBody" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="checkCookies" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestCases.TC001_Get_All_Employee_Data@7f13d6e]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCases.TC001_Get_All_Employee_Data -->
      <class name="TestCases.TC002_Get_Single_Employee_Data">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="getAllEmployees" is-config="true" duration-ms="1199" started-at="2020-05-28T21:02:47 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckContentEncoding" duration-ms="2" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckResponseTime" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckContentType" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckContentLength" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="FAIL" signature="CheckStatusCode()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckStatusCode" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<400> but was:<200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<400> but was:<200>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at org.junit.Assert.assertEquals(Assert.java:456)
at TestCases.TC002_Get_Single_Employee_Data.CheckStatusCode(TC002_Get_Single_Employee_Data.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckServerType" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="checkCookies" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="CheckStatusLine" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="checkResponseBody" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<false> but was:<true>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:147)
at TestCases.TC002_Get_Single_Employee_Data.checkResponseBody(TC002_Get_Single_Employee_Data.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestCases.TC002_Get_Single_Employee_Data@51cdd8a]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-05-28T21:02:48 IST" finished-at="2020-05-28T21:02:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCases.TC002_Get_Single_Employee_Data -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
